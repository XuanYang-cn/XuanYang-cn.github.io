<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>profiling on Hello Friend</title>
    <link>https://xuanyang-cn.github.io/tags/profiling/</link>
    <description>Recent content in profiling on Hello Friend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 26 Mar 2021 14:52:08 +0800</lastBuildDate><atom:link href="https://xuanyang-cn.github.io/tags/profiling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go profiling tools</title>
      <link>https://xuanyang-cn.github.io/posts/2021/03/go-profiling-tools/</link>
      <pubDate>Fri, 26 Mar 2021 14:52:08 +0800</pubDate>
      
      <guid>https://xuanyang-cn.github.io/posts/2021/03/go-profiling-tools/</guid>
      <description>How to profile in Go? How to choose tools for profiling? PProf: CPU, Mem, Goroutinue Blocking, Graphics, Goroutines, Mutexes
Trace: Goroutine creation/blocking/unblocking, syscall enter/exit/block, GC-related events, changes of heap size, processor start/stop, etc.
dlv: Single step debugging
gdb: Single step debugging
Basic Usages of Tools 1. GCTRACE  gctrace: setting gctrace=1 causes the garbage collector to emit a single line to standard error at each collection, summarizing the amount of memory collected and the length of the pause.</description>
    </item>
    
  </channel>
</rss>
