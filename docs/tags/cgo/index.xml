<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cgo on Hello Friend</title>
    <link>https://xuanyang-cn.github.io/tags/cgo/</link>
    <description>Recent content in cgo on Hello Friend</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 23 Feb 2021 16:05:20 +0800</lastBuildDate>
    
	<atom:link href="https://xuanyang-cn.github.io/tags/cgo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cgo: All You Need to Know</title>
      <link>https://xuanyang-cn.github.io/posts/2021/02/cgo-all-you-need-to-know/</link>
      <pubDate>Tue, 23 Feb 2021 16:05:20 +0800</pubDate>
      
      <guid>https://xuanyang-cn.github.io/posts/2021/02/cgo-all-you-need-to-know/</guid>
      <description>Cgo Intro Cgo 让 GO 可以调用 C 的代码。
接下来就用一个简单的例子来介绍 Cgo 的用法。
下面 GO 的 rand 包提供了两个方法 Random 和 Seed， 它们分别调用了 C 的 random 和 srandom 方法。
package rand /* #include &amp;lt;stdlib.h&amp;gt; */ import &amp;#34;C&amp;#34; func Random() int { return int(C.random()) } func Seed(i int) { C.srandom(C.uint(i)) } // ref@https://blog.golang.org/cgo 从 import 语句来看，rand 包引入了 &amp;quot;C&amp;quot;， 但是你会发现标准 Go library 里并没有 C 这个库。这是因为 C 是一个伪包 (pesudo-package)，是一个可以被 cgo 解析的特殊名字，用来确定代码里 C 的命名空间。
rand 包用到 C 的地方有 4 个：C.</description>
    </item>
    
  </channel>
</rss>